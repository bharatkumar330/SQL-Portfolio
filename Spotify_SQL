-- Step 1: Drop the table if it exists\
DROP TABLE IF EXISTS spotify_songs;\
\
-- Step 2: Create the table\
CREATE TABLE spotify_songs (\
    track_id VARCHAR PRIMARY KEY,\
    track_name VARCHAR,\
    track_artist VARCHAR,\
    track_popularity INTEGER,\
    track_album_id VARCHAR,\
    track_album_name VARCHAR,\
    track_album_release_date DATE,\
    playlist_name VARCHAR,\
    playlist_id VARCHAR,\
    playlist_genre VARCHAR,\
    playlist_subgenre VARCHAR,\
    danceability FLOAT,\
    energy FLOAT,\
    key INTEGER,\
    loudness FLOAT,\
    mode INTEGER,\
    speechiness FLOAT,\
    acousticness FLOAT,\
    instrumentalness FLOAT,\
    liveness FLOAT,\
    valence FLOAT,\
    tempo FLOAT,\
    duration_ms INTEGER\
);\
\
-- Step 3: Load data from CSV file\
\
COPY spotify_songs(track_id, track_name, track_artist, track_popularity, track_album_id, \
                   track_album_name, track_album_release_date, playlist_name, playlist_id, \
                   playlist_genre, playlist_subgenre, danceability, energy, key, loudness, \
                   mode, speechiness, acousticness, instrumentalness, liveness, valence, \
                   tempo, duration_ms)\
FROM '/Users/bharatkumar/Desktop/spotify_songs.csv \
DELIMITER ',' \
CSV HEADER;\
\
-- Step 4: Perform analysis\
\
-- 4.1: Find the top 10 most popular tracks\
SELECT track_name, track_artist, track_popularity\
FROM spotify_songs\
ORDER BY track_popularity DESC\
LIMIT 10;\
\
-- 4.2: Find the average danceability and energy by genre\
SELECT playlist_genre, AVG(danceability) AS avg_danceability, AVG(energy) AS avg_energy\
FROM spotify_songs\
GROUP BY playlist_genre;\
\
-- 4.3: Find the distribution of tracks by release year\
SELECT EXTRACT(YEAR FROM track_album_release_date) AS release_year, COUNT(*) AS track_count\
FROM spotify_songs\
GROUP BY release_year\
ORDER BY release_year;\
\
-- 4.4: Find the top 5 artists with the most tracks in the dataset\
SELECT track_artist, COUNT(*) AS track_count\
FROM spotify_songs\
GROUP BY track_artist\
ORDER BY track_count DESC\
LIMIT 5;\
\
-- 4.5: Calculate the average loudness and valence for tracks in each mode (major/minor)\
SELECT mode, AVG(loudness) AS avg_loudness, AVG(valence) AS avg_valence\
FROM spotify_songs\
GROUP BY mode;\
\
-- 4.6: Find the longest and shortest tracks\
SELECT track_name, track_artist, duration_ms\
FROM spotify_songs\
ORDER BY duration_ms DESC\
LIMIT 1;\
\
SELECT track_name, track_artist, duration_ms\
FROM spotify_songs\
ORDER BY duration_ms ASC\
LIMIT 1;\
}
